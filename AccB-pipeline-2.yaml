AWSTemplateFormatVersion: 2010-09-09

###########################################################################################################
############## DESCRIPTION ##############
###########################################################################################################

Description: AWS CloudFormation template to build the infrastructure components for creating cross-account CodePipeline with source from another AWS account

###########################################################################################################
############## METADATA ##############
###########################################################################################################

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "ECS resources details"
        Parameters:
          - AccAECRRepository
          - DockerImageTag
          - ECSClusterName
          - ECSServiceName
      -
        Label:
          default: "CodePipeline resources details"
        Parameters:
          - AccBPipelineName
          - S3ZipObjectKey
          - KMSAdminRole
      -
        Label:
          default: "General details"
        Parameters:
          - AccAID
          - CrossAccountRoleName

###########################################################################################################
############## PARAMETERS ##############
###########################################################################################################

Parameters:
  AccAID:
    Type: String
    Description: Account ID of Account A where source is present
    AllowedPattern: '^$|^([0-9]){12}$'
    ConstraintDescription: Must be a valid AWS Account ID

  AccBPipelineName:
    Type: String
    Description: Name of the CodePipeline to be created in Account B
    AllowedPattern: '[A-Za-z0-9.@\-_]+'
    ConstraintDescription: Must contain only alphanumeric characters dash
    MinLength: 1
    MaxLength: 100

  S3ZipObjectKey:
    Type: String
    Description: S3 Object Key name of the zipped file used as Source of CodePipeline. The default file name for the file is imagedefinitions.json. Refer this official documentation for further details. https://docs.aws.amazon.com/codepipeline/latest/userguide/file-reference.html#pipelines-create-image-definitions
    Default: imagedefinitions.zip

  KMSAdminRole:
    Type: String
    Description: IAM Role name who will administer KMS Key used to encrypt CodePipeline's artifact.
    AllowedPattern: '[\w+=,.@-]{1,64}'
    ConstraintDescription: Must be a valid IAM Role name.

  AccAECRRepository:
    Type: String
    Description: Name of the ECR Repository in Account A where Docker images are stored. Can be retrieved from Outputs section of stack deployed in Account A.
    AllowedPattern: '^(?=.{2,256}$)((?:[a-z0-9]+(?:[._-][a-z0-9]+)*/)*[a-z0-9]+(?:[._-][a-z0-9]+)*)$'
    ConstraintDescription: Must start with a letter and can only contain lowercase letters, numbers, hyphens, underscores, and forward slashes.
    MinLength: 2
    MaxLength: 256

  DockerImageTag:
    Type: String
    Description: Name of the Docker image tag stored in ECR Repository

  ECSClusterName:
    Type: String
    Description: Name of the ECS Cluster spun up in Account B

  ECSServiceName:
    Type: String
    Description: Name of the ECS Service created in Account B

  CrossAccountRoleName:
    Description: Name of the cross account role which is created in Account A. Can be retrieved from Outputs section of stack deployed in Account A.
    Type: String

###########################################################################################################
############## RESOURCES ##############
###########################################################################################################

Resources:
  AccBSourceBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub acc-b-imagedefinitions-store-${AWS::Region}-${AWS::AccountId}
      VersioningConfiguration:
        Status: Enabled

  AccBCodePipelineArtifactStoreBucket:
    Type: AWS::S3::Bucket

  AccBCodePipelineArtifactStoreBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref AccBCodePipelineArtifactStoreBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: DenyUnEncryptedObjectUploads
            Effect: Deny
            Principal: '*'
            Action: s3:PutObject
            Resource: !Join [ '', [ !GetAtt AccBCodePipelineArtifactStoreBucket.Arn, '/*' ] ]
            Condition:
              StringNotEquals: 
                s3:x-amz-server-side-encryption: aws:kms
          - Sid: DenyInsecureConnections
            Effect: Deny
            Principal: '*'
            Action: s3:*
            Resource: !Join [ '', [ !GetAtt AccBCodePipelineArtifactStoreBucket.Arn, '/*' ] ]
            Condition:
              Bool:
                aws:SecureTransport: false
          - Sid: AllowAccAGetPut
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:${AWS::Partition}:iam::${AccAID}:root'
            Action:
              - s3:Get*
              - s3:Put*
            Resource: !Join [ '', [ !GetAtt AccBCodePipelineArtifactStoreBucket.Arn, '/*' ] ]
          - Sid: AllowAccAListBucket
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:${AWS::Partition}:iam::${AccAID}:root'
            Action:
              - s3:ListBucket
            Resource: !GetAtt AccBCodePipelineArtifactStoreBucket.Arn

  AccBCodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - !Sub 'codepipeline.${AWS::URLSuffix}'
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: Cross-Account-Assume-Policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource: !Sub 'arn:${AWS::Partition}:iam::${AccAID}:role/${CrossAccountRoleName}'
        - PolicyName: AWSCodePipelineServiceRole-Policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ecr:DescribeImages
                Resource: '*'
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: '*'
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                      - !Sub 'cloudformation.${AWS::URLSuffix}'
                      - !Sub 'elasticbeanstalk.${AWS::URLSuffix}'
                      - !Sub 'ec2.${AWS::URLSuffix}'
                      - !Sub 'ecs-tasks.${AWS::URLSuffix}'
              - Effect: Allow
                Action:
                  - ec2:*
                  - elasticloadbalancing:*
                  - autoscaling:*
                  - cloudwatch:*
                  - s3:*
                  - ecs:*
                Resource: '*'

  AccBPipeline: 
    Type: AWS::CodePipeline::Pipeline
    Properties: 
      Name: !Ref AccBPipelineName
      RoleArn: !GetAtt AccBCodePipelineServiceRole.Arn
      Stages:
        - Name: Source
          Actions: 
            - Name: Source
              ActionTypeId: 
                Category: Source
                Owner: AWS
                Version: 1
                Provider: S3
              OutputArtifacts: 
                - Name: SourceS3Output
              Configuration: 
                S3Bucket: !Ref AccBSourceBucket
                S3ObjectKey: !Ref S3ZipObjectKey
                PollForSourceChanges: true
              RunOrder: 1
            - Name: ECR
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: ECR
              OutputArtifacts: 
                - Name: SourceECROutput
              Configuration: 
                ImageTag: !Ref DockerImageTag
                RepositoryName: !Ref AccAECRRepository
              RoleArn: !Sub 'arn:${AWS::Partition}:iam::${AccAID}:role/${CrossAccountRoleName}'
              RunOrder: 1
        - Name: Deploy
          Actions: 
            - Name: Deploy
              InputArtifacts: 
                - Name: SourceS3Output
              ActionTypeId: 
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: ECS
              Configuration: 
                ClusterName: !Ref ECSClusterName
                ServiceName: !Ref ECSServiceName
              RunOrder: 1
      ArtifactStore: 
        Type: S3
        Location: !Ref AccBCodePipelineArtifactStoreBucket
        EncryptionKey:
          Id: !GetAtt AccBKMSKey.Arn
          Type: KMS

  AccBKMSKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/acc-b-kms
      TargetKeyId: !Ref AccBKMSKey

  AccBKMSKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Symmetric encryption KMS key created in Account B for CodePipeline
      KeyPolicy:
        Version: 2012-10-17
        Id: acc-b-kms-policy
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:root'
            Action: kms:*
            Resource: '*'
          - Sid: Allow administration of the key
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${KMSAdminRole}'
            Action:
              - kms:Create*
              - kms:Describe*
              - kms:Enable*
              - kms:List*
              - kms:Put*
              - kms:Update*
              - kms:Revoke*
              - kms:Disable*
              - kms:Get*
              - kms:Delete*
              - kms:TagResource
              - kms:UntagResource
              - kms:ScheduleKeyDeletion
              - kms:CancelKeyDeletion
            Resource: '*'
          - Sid: Allow use of the key
            Effect: Allow
            Principal:
              AWS: 
              - !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${KMSAdminRole}'
              - !GetAtt AccBCodePipelineServiceRole.Arn
              - !Sub 'arn:${AWS::Partition}:iam::${AccAID}:root'
            Action:
              - kms:DescribeKey
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Resource: '*'
          - Sid: Allow attachment of persistent resources
            Effect: Allow
            Principal:
              AWS: 
              - !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${KMSAdminRole}'
              - !GetAtt AccBCodePipelineServiceRole.Arn
              - !Sub 'arn:${AWS::Partition}:iam::${AccAID}:root'
            Action:
              - kms:CreateGrant
              - kms:ListGrants
              - kms:RevokeGrant
            Resource: '*'
            Condition:
              Bool:
                kms:GrantIsForAWSResource: true

  AccBEBRuleECR:
    Type: AWS::Events::Rule
    Properties:
      Description: EventBridge Rule in Account B which listens on ECR repository created in Account A
      Name: Acc-B-Cross-Account-EventBridge-Rule
      State: ENABLED
      EventPattern:
        source:
          - aws.ecr
        detail-type:
          - "ECR Image Action"
        account:
          - !Ref AccAID
        detail:
          action-type:
            - PUSH
          result:
            - SUCCESS
          image-tag:
            - !Ref DockerImageTag
          repository-name:
            - !Ref AccAECRRepository
      Targets:
        - Arn: !Sub arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${AccBPipelineName}
          Id: CrossAccountECREventBridge
          RoleArn: !GetAtt AccBEBIAMRole.Arn

  AccBEBIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: !Sub 'events.${AWS::URLSuffix}'
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: PutEventsDestinationBus
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codepipeline:StartPipelineExecution
                Resource: !Sub arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${AccBPipelineName}

###########################################################################################################
############## OUTPUTS ##############
###########################################################################################################

Outputs:
  AccBKMSKeyARN:
    Description: ARN of the KMS Key created in Account B
    Value: !GetAtt AccBKMSKey.Arn
