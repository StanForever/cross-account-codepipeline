AWSTemplateFormatVersion: 2010-09-09

###########################################################################################################
############## DESCRIPTION ##############
###########################################################################################################

Description: AWS CloudFormation template to build the infrastructure components for creating cross-account CodePipeline with source from another AWS account

###########################################################################################################
############## METADATA ##############
###########################################################################################################

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Account B resources details"
        Parameters:
          - AccBID
          - AccBKMSARN

###########################################################################################################
############## PARAMETERS ##############
###########################################################################################################

Parameters:
  AccBID:
    Type: String
    Description: Account ID of Account B where CodePipeline is created
    AllowedPattern: '^$|^([0-9]){12}$'
    ConstraintDescription: Must be a valid AWS Account ID

  AccBKMSARN:
    Type: String
    Description: ARN of KMS Key created in Account B
    AllowedPattern: '^arn:aws[kms]*:[a-z0-9-]+:[a-z0-9-]+:key\/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
    ConstraintDescription: Must be a valid AWS ARN

###########################################################################################################
############## RESOURCES ##############
###########################################################################################################

Resources:
  AccAECRRepository: 
    Type: AWS::ECR::Repository
    Properties: 
      RepositoryName: acc-a-ecr-repo
      RepositoryPolicyText: 
        Version: "2012-10-17"
        Statement: 
          - Sid: Cross-Account-ECR-Policy
            Effect: Allow
            Principal: 
              AWS: 
                - !GetAtt AccACrossAccountIAMRole.Arn
                - !Sub 'arn:${AWS::Partition}:iam::${AccBID}:root'
            Action: 
              - ecr:BatchCheckLayerAvailability
              - ecr:BatchGetImage
              - ecr:CompleteLayerUpload
              - ecr:DescribeImages
              - ecr:DescribeRepositories
              - ecr:GetDownloadUrlForLayer
              - ecr:GetLifecyclePolicy
              - ecr:GetLifecyclePolicyPreview
              - ecr:GetRepositoryPolicy
              - ecr:ListImages
              - ecr:UploadLayerPart

  AccACrossAccountIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CrossAccount-A-Role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Sub 'arn:${AWS::Partition}:iam::${AccBID}:root'
            Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
      Policies:
        - PolicyName: KMSInlinePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - kms:DescribeKey
                  - kms:GenerateDataKey*
                  - kms:Encrypt
                  - kms:ReEncrypt*
                  - kms:Decrypt
                Resource: !Ref AccBKMSARN

  AccAEBRule:
    Type: AWS::Events::Rule
    Properties:
      Description: EventBridge Rule in Account A which listens on ECR repository created in Account A
      Name: Acc-A-Cross-Account-Rule-cfn
      State: ENABLED
      EventPattern:
        source:
          - aws.ecr
        detail-type:
          - "ECR Image Action"
        detail:
          action-type:
            - PUSH
          result:
            - SUCCESS
          repository-name:
            - !Ref AccAECRRepository
      Targets:
        - Arn: !Sub arn:${AWS::Partition}:events:${AWS::Region}:${AccBID}:event-bus/default
          Id: CrossAccountDefaultEventBridge
          RoleArn: !GetAtt AccAEBIAMRole.Arn

  AccAEBIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: !Sub 'events.${AWS::URLSuffix}'
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: InvokeEventBus
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - events:PutEvents
                Resource: !Sub 'arn:${AWS::Partition}:events:${AWS::Region}:${AccBID}:event-bus/default'

###########################################################################################################
############## OUTPUTS ##############
###########################################################################################################

Outputs:
  AccACrossAccountIAMRoleName:
    Description: Name of the Cross Account IAM Role 
    Value: !Ref AccACrossAccountIAMRole

  AccAECRRepositoryName:
    Description: Name of the ECR Repository created in Account A
    Value: !Ref AccAECRRepository
